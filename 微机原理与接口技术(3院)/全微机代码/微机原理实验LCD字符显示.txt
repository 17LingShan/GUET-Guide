DATA	SEGMENT
BUFF	DB	0B9H,0F0H,0C1H,0D6H,0B5H,0E7H,0D7H,0D3H,0BFH,0C6H,0BCH,0BCH,0B4H,0F3H,0D1H,0A7H
ADDS1	DB	80H,81H,82H,83H,84H,85H,86H,87H
LEN1	EQU	$-ADDS1
SOUR	DB	0CEH,0A2H,0BBH,0FAH,0D4H,0ADH,0C0H,0EDH,0CAH,0B5H,0D1H,0E9H 
ADDS2	DB	98H,99H,9AH,9BH,9CH,9DH                          
LEN2	EQU	$-ADDS2
DATA	ENDS

CODE	SEGMENT
	ASSUME	CS:CODE,DS:DATA
START:MOV	AX,DATA
	MOV	DS,AX
	MOV	AL,80H
	MOV	DX,28BH
	OUT	DX,AL

	MOV	BL,01H
	CALL	WRITE_COM
	MOV	BL,0EH
	CALL	WRITE_COM

	MOV	CX,LEN1
	LEA	SI,BUFF
	LEA	DI,ADDS1
ATUR:	MOV	BL,[DI]
	CALL	WRITE_COM
	MOV	BL,[SI]
	CALL	WRITE_DATA
	INC	SI
	MOV	BL,[SI]
	CALL	WRITE_DATA
	INC	SI
	INC	DI
	LOOP	ATUR

	MOV	CL,LEN2
	MOV	CH,00H
	LEA	SI,SOUR
	LEA	DI,ADDS2
DDD:	MOV	BL,[DI]
	CALL	WRITE_COM
	MOV	BL,[SI]
	CALL	WRITE_DATA
	INC	SI
	MOV	BL,[SI]
	CALL	WRITE_DATA
	INC	DI
	INC	SI
	LOOP	DDD
	MOV	AH,4CH
	INT	21H

WRITE_COM	PROC	NEAR
	MOV	AL,BL
	MOV	DX,288H
	OUT	DX,AL
	MOV	AL,00H
	MOV	DX,28AH
	OUT	DX,AL
	CALL	DELAY
	MOV	AL,04H
	MOV	DX,28AH
	OUT	DX,AL	
	CALL	DELAY
	MOV	AL,00H
	MOV	DX,28AH
	OUT	DX,AL	
	CALL	DELAY
		RET
WRITE_COM	ENDP

WRITE_DATA	PROC	NEAR
	MOV	AL,BL
	MOV	DX,288H
	OUT	DX,AL	
	MOV	AL,01H
	MOV	DX,28AH			
	OUT	DX,AL
	CALL	DELAY
	MOV	AL,05H
	MOV	DX,28AH
	OUT	DX,AL	
	CALL	DELAY
	MOV	AL,01H
	MOV	DX,28AH
	OUT	DX,AL	
	CALL	DELAY
		RET
WRITE_DATA	ENDP 

DELAY	PROC	NEAR
	PUSH	CX
	MOV	CX,0FFH
LOOP1:LOOP	LOOP1
	POP	CX
	RET
DELAY	ENDP
CODE	ENDS
	END	START  